language: go

# There is a basic build matrix of 4 jobs that test the latest clang against
# both operating systems and both majoy versions of Python.
os:
  - linux
  - osx

env:
  - CLANG=3.9

# On top of testing the latest version of clang we also need to test all (most?)
# of the previous releases. We only test these against linux and python 3
# becuase the clang version on mac is more stable and we don't want to make the
# build matrix unnecessarily large.
matrix:
  include:
    - env: CLANG=3.8
      os: linux
    - env: CLANG=3.7
      os: linux
    - env: CLANG=3.6
      os: linux
    - env: CLANG=3.4
      os: linux

before_install:
  - |
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-add-repository "deb http://apt.llvm.org/precise/ llvm-toolchain-precise-$CLANG main"
        sudo apt-get update
        sudo apt-cache search clang
        sudo apt-get install -f -y --force-yes clang-$CLANG lldb-$CLANG
      fi

script:
  # Run the unit tests first
  - go test ./ast -race -coverprofile=coverage.txt -covermode=atomic

  # Now run the integration tests.
  - |
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        CLANG_BIN=clang-$CLANG bash run-tests.sh
      else
        bash run-tests.sh
      fi

  # These steps are from the README to verify it can be installed and run as
  # documented.
  - cd /tmp
  - export C2GO=$GOPATH/src/github.com/elliotchance/c2go
  - c2go $C2GO/tests/hello-world.c > hello-world.go
  - go run hello-world.go

after_success:
  - bash <(curl -s https://codecov.io/bash)
